/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
  quick-release;
};

/ {
        
    behaviors {
        // tap once i = i, tap twice i = esc
        td_i_esc: tap_dance_i_esc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp I>, <&kp ESC>;
        };

        // layer on hold, stiky mod on tap
        lm: layer_modifier {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&mo>, <&sk>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

            default_layer {
              bindings = <
                &kp Q &kp W &kp E &kp R       &kp T               &kp Y        &kp U &td_i_esc &kp O   &kp P
                &kp A &kp S &kp D &kp F       &kp G               &kp H        &kp J &kp K     &kp L   &kp SEMI
                &kp Z &kp X &kp C &kp V       &kp B               &kp N        &kp M &kp CMMA  &kp DOT &kp FSLH
                                  &lm 1 LCTRL &mt RALT SPC        &mt LSFT RET &lm 2 LGUI
              >;
            };

            num_layer {
              bindings = <
                &none &none &none &none  &none     &none    &kp N7 &kp N8 &kp N9 &none
                &none &none &none &none  &none     &none    &kp N4 &kp N5 &kp N6 &kp DOT
                &none &none &none &none  &none     &kp N0   &kp N1 &kp N2 &kp N3 &none
                                  &trans &trans    &kp BSPC &kp DEL
              >;
            };
    
            sym_layer {
              bindings = <
                &kp EXCL   &kp AT    &kp LBRC &kp RBRC &kp PIPE         &kp TAB   &kp UNDER &kp SQT   &kp BSLH &none
                &kp HASH   &kp DLLR  &kp LPAR &kp RPAR &none            &kp PLUS  &kp MINUS &kp DQT   &kp STAR &kp AMPS
                &kp PRCNT  &kp CARET &kp LBKT &kp RBKT &kp TILDE        &kp CAPS  &kp EQUAL &kp GRAVE &none    &none
                                              &mo 3    &mo 4            &kp SPC   &mo 2
              >;
            };
            nav_layer {
              bindings = <
                &none &none &none &none &none     &none    &kp HOME &kp PG_UP &none     &none
                &none &none &none &none &none     &kp LEFT &kp DOWN &kp UP    &kp RIGHT &none
                &none &none &none &none &none     &none    &kp END  &kp PG_DN &none     &none
                                  &trans &trans   &trans   &trans
              >;
            };
            fun_layer {
              bindings = <
                &none        &bt BT_PRV   &bt BT_CLR   &bt BT_NXT   &none                &trans &kp F7 &kp F8 &kp F9 &kp F10
                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4         &trans &kp F4 &kp F5 &kp F6 &kp F11
                &none        &none        &none        &none        &none                &trans &kp F1 &kp F2 &kp F3 &kp F12
                                                       &trans       &trans               &trans &trans
              >;
            };

    };
};
