/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
  quick-release;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <7 7>;
            bindings = <&kp ESC>;
        };

    };

    behaviors {
        td_i_esc: tap_dance_i_esc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <50>;
            bindings = <&kp I>, <&kp ESC>;
        };
    };

    skq: sticky_key_ctrl_nums {
        compatible = "zmk,behavior-sticky-key";
        #binding-cells = <1>;
        bindings = <&kp LCTRL>;
        release-after-ms = <1000>;
        ignore-modifiers;
    };
    keymap {
        compatible = "zmk,keymap";

            default_layer {
              bindings = <
                &kp Q &kp W &kp E &kp R &kp T                       &kp Y &kp U &td_i_esc &kp O   &kp P
                &kp A &kp S &kp D &kp F &kp G                       &kp H &kp J &kp K     &kp L   &kp SEMI
                &kp Z &kp X &kp C &kp V &kp B                       &kp N &kp M &kp CMMA  &kp DOT &kp FSLH
                                &mt <&sk LCTRL, &mo 1> &mt RALT SPC                  &mt LSFT RET &mo 2
              >;
            };

            left_layer {
              bindings = <
                &none &none &none &none &none     &none  &kp N7 &kp N8 &kp N9 &none
                &none &none &none &none &none     &none  &kp N4 &kp N5 &kp N6 &kp DOT
                &none &none &none &none &none     &kp N0 &kp N1 &kp N2 &kp N3 &none
                                  &trans &kp LGUI &kp BSPC  &kp DEL
              >;
            };
    
            right_layer {
              bindings = <
                &kp EXCL   &kp AT    &kp LBRC &kp RBRC &kp PIPE         &kp TAB   &kp UNDER &kp SQT   &kp BSLH &none
                &kp HASH   &kp DLLR  &kp LPAR &kp RPAR &none            &kp PLUS  &kp MINUS &kp DQT   &kp STAR &kp AMPS
                &kp PRCNT  &kp CARET &kp LBKT &kp RBKT &kp TILDE        &kp CAPS  &kp EQUAL &kp GRAVE &none    &none
                                              &mo 4    &mo 3            &kp SPC   &mo 2
              >;
            };
    
            tri_layer {
              bindings = <
                &kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5             &trans &trans   &trans   &trans  &trans
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                          &trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans
                &bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7                 &trans &kp PG_DN  &kp K_VOL_DN  &trans &trans
                             &trans &trans                      &trans &trans
              >;
            };

    };
};
